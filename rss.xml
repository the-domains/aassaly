<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title><![CDATA[AAssaly]]></title>
        <description><![CDATA[AAssaly]]></description>
        <link>https://thegrid.ai/aassaly/</link>
        <generator>The Grid</generator>
        <lastBuildDate>Sun, 06 Mar 2016 18:28:19 GMT</lastBuildDate>
        <atom:link href="https://thegrid.ai/aassaly/rss.xml" rel="self" type="application/rss+xml"/>
        <item>
            <title><![CDATA[
Is there a right way to make complicated applications usable?]]></title>
            <description><![CDATA[<article><h1>
Is there a right way to make complicated applications usable?</h1><h2>Usability Comparison</h2><p>It's easier to understand how complicated software can be user friendly when we have a better understanding of User-Centered Design (UCD) and how it's come to be such a critical step in software development. Software usability has seen a shift in recent years towards a more human-centered approach. UCD is not a new, and it's abundant use in today's digital companies was probably best predicted by by R S Nickerson when he said "the need for the future is not so much computer oriented people as for people oriented computers’’ in 1969 [1]. Having said that 47 years ago (UCD) is not a novel idea, but rather a growing and continually and evolving concept.</p><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/981c694f93d56cc9381638a6db49e45f415c3cbd.png"></article>]]></description>
            <link>https://thegrid.ai/aassaly/is-there-a-right-way-to-make-complicated-applications-usable/index.html</link>
            <guid isPermaLink="false">edb96e9c-a8aa-4d93-bc59-ba1d97ce7165</guid>
            <pubDate>Sun, 06 Mar 2016 18:27:34 GMT</pubDate>
        </item>
    </channel>
</rss>